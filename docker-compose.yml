version: '3'
services:
  opensearch-node1:
    # image: opensearchproject/opensearch:3.0.0
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node1
    environment:
     # - node.roles=cluster_manager # Example for providing specific roles, you can remove this to keep the default roles
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.type=single-node
      # - discovery.seed_hosts=opensearch-node1,opensearch-node2
      # - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m -Dopensearch.experimental.feature.telemetry.enabled=true"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=MyPassword123!
      - DISABLE_SECURITY_PLUGIN=true
      - opensearch.experimental.feature.telemetry.enabled=true
      - telemetry.feature.tracer.enabled=true
      - telemetry.feature.metrics.enabled=true
      - telemetry.tracer.enabled=true
      - telemetry.tracer.sampler.probability=1.0
      - plugins.ml_commons.metrics_static_collection_enabled=true
      - plugins.ml_commons.metrics_collection_enabled=true
      # - telemetry.otel.tracer.span.exporter.class=io.opentelemetry.exporter.logging.LoggingSpanExporter
      # - telemetry.otel.endpoint=http://localhost:4317
      # - telemetry.otel.service_name=opensearch
      # - telemetry.otel.trace.enabled=true
      # - telemetry.otel.trace.sampler.type=always_on
      # - telemetry.otel.tracer.span.exporter.class=io.opentelemetry.exporter.otlp.trace.OtlpGrpcSpanExporter
      # - plugins.ml_commons.agent_tracing_feature_enabled=true
      # - plugins.ml_commons.agent_tracing_enabled=true
      # - plugins.ml_commons.agent_tracing_feature_enabled=true
      # - asdf
      # - telemetry.otel.tracer.exporter.batch_size=1
      # - telemetry.otel.tracer.exporter.max_queue_size=3
      # - telemetry.otel.tracer.exporter.delay=2s
      # - telemetry.otel.tracer.span.exporter.endpoint=http://otel-collector:4317
      
      # - telemetry.otel.tracer.exporter.batch_size=1
      # - telemetry.otel.tracer.exporter.max_queue_size=3
      # - telemetry.otel.tracer.exporter.delay=2s
      # - "telemetry.otel.tracer.span.exporter.class=io.opentelemetry.exporter.otlp.trace.OtlpGrpcSpanExporter"
      # - "telemetry.otel.endpoint=http://otel-collector:4317"
      # - telemetry.otel.tracer.span.exporter.endpoint=http://otel-collector:4317
      # - telemetry.otel.metrics.exporter.class=io.opentelemetry.exporter.otlp.metrics.OtlpGrpcMetricExporter
      # - telemetry.otel.metrics.exporter.endpoint=http://otel-collector:4317
      # - telemetry.tracer.otlp.endpoint=otel-collector:4317
      # - telemetry.tracer.otlp.protocol=grpc
      # - telemetry.tracer.otlp.insecure=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
      # USE THE BELOW TO MOUNT YOUR LOCAL BUILD TO AN INSTANCE
      - /Users/chrlaii/Desktop/Programming/ml-commons/plugin/build/distributions:/usr/share/opensearch/ml-plugin
      # - ./telemetry-log4j2.xml:/usr/share/opensearch/config/telemetry-log4j2.xml
      # - ./telemetry.yml:/usr/share/opensearch/config/telemetry.yml
    command: bash -c "bin/opensearch-plugin remove opensearch-skills; bin/opensearch-plugin remove opensearch-ml; bin/opensearch-plugin install --batch telemetry-otel --batch file:///usr/share/opensearch/ml-plugin/opensearch-ml-3.0.0.0-SNAPSHOT.zip; ./opensearch-docker-entrypoint.sh opensearch"
    # command: >
    #   bash -c "
    #   bin/opensearch-plugin remove opensearch-skills; 
    #   bin/opensearch-plugin remove opensearch-ml; 
    #   bin/opensearch-plugin install --batch telemetry-otel --batch file:///usr/share/opensearch/ml-plugin/opensearch-ml-3.0.0.0-SNAPSHOT.zip; 
    #   ./opensearch-docker-entrypoint.sh opensearch"
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    networks:
      - opensearch-net
    # depends_on:
    #   - otel-collector
    # extra_hosts:
    #   - "localhost:172.17.0.1"  # This maps localhost to the Docker host IP

  # opensearch-node2:
  #   # image: opensearchproject/opensearch:3.0.0
  #   image: opensearchproject/opensearch:latest
  #   container_name: opensearch-node2
  #   environment:
  #    # - 'node.roles=data,ingest' # Example for providing specific roles
  #     - cluster.name=opensearch-cluster
  #     - node.name=opensearch-node2
  #     - discovery.seed_hosts=opensearch-node1,opensearch-node2
  #     - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
  #     - bootstrap.memory_lock=true
  #     - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m -Dopensearch.experimental.feature.telemetry.enabled=true"
  #     - OPENSEARCH_INITIAL_ADMIN_PASSWORD=MyPassword123!
  #     - opensearch.experimental.feature.telemetry.enabled=true
  #     - telemetry.feature.tracer.enabled=true
  #     - telemetry.feature.metrics.enabled=true
  #     - telemetry.tracer.enabled=true
  #     - telemetry.tracer.sampler.probability=1.0
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   volumes:
  #     - opensearch-data2:/usr/share/opensearch/data
  #   networks:
  #     - opensearch-net
  #   # extra_hosts:
  #   #   - "host.docker.internal:host-gateway"
  #   # depends_on:
  #   #   - otel-collector

  # Example to setup ml nodes, CHECK `node.roles`  # opensearch-ml1:
  #   image: opensearchproject/opensearch:2.17.0
  #   container_name: opensearch-ml1
  #   environment:
  #     - cluster.name=opensearch-cluster
  #     - node.name=opensearch-ml1
  #     - node.roles=ml # SEE THIS ROLE
  #     - discovery.seed_hosts=opensearch-node1,opensearch-node2,opensearch-node3
  #     - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2,opensearch-node3
  #     - bootstrap.memory_lock=true
  #     - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
  #     - OPENSEARCH_INITIAL_ADMIN_PASSWORD=MyPassword123!
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   volumes:
  #     - opensearch-ml1:/usr/share/opensearch/data
  #   networks:
  #     - opensearch-net
  
  # opensearch-ml2:
  #   image: opensearchproject/opensearch:2.17.0
  #   container_name: opensearch-ml2
  #   environment:
  #     - cluster.name=opensearch-cluster
  #     - node.name=opensearch-ml2
  #     - node.roles=ml
  #     - discovery.seed_hosts=opensearch-node1,opensearch-node2,opensearch-node3
  #     - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2,opensearch-node3
  #     - bootstrap.memory_lock=true
  #     - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
  #     - OPENSEARCH_INITIAL_ADMIN_PASSWORD=MyPassword123!
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   volumes:
  #     - opensearch-ml2:/usr/share/opensearch/data
  #     # - /Users/pybot/opensearch/ml-commons/plugin/build/distributions:/usr/share/opensearch/pavan
  #   # command: bash -c "bin/opensearch-plugin remove opensearch-skills; bin/opensearch-plugin remove opensearch-ml; bin/opensearch-plugin install --batch file:///usr/share/opensearch/pavan/opensearch-ml-2.15.0.0-SNAPSHOT.zip; ./opensearch-docker-entrypoint.sh opensearch"
  #   networks:
  #     - opensearch-net
 
  opensearch-dashboards:
    # image: opensearchproject/opensearch-dashboards:3.0.0
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch-node1:9200"]' # , "https://opensearch-node2:9200"
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"
    networks:
      - opensearch-net
    depends_on:
      - opensearch-node1
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"

  # data-prepper:
  #   restart: unless-stopped
  #   container_name: data-prepper
  #   image: opensearchproject/data-prepper:2
  #   volumes:
  #     - ./data-prepper-config.yaml:/usr/share/data-prepper/config/data-prepper-config.yaml
  #     - ./pipelines.yaml:/usr/share/data-prepper/pipelines/pipelines.yaml
  #   ports:
  #     - "21890:21890"
  #   networks:
  #     - opensearch-net

# otel-collector:
  #   build:
  #     context: ../otel-lite-collector
  #     dockerfile: Dockerfile
  #   container_name: otel-collector
  #   ports:
  #     - "4317:4317"  # OTLP gRPC port
  #     - "4318:4318"  # OTLP HTTP port
  #   networks:
  #     - opensearch-net

  # otel-collector:
  #   # image: otel/opentelemetry-collector:latest
  #   image: otel/opentelemetry-collector-contrib:latest
  #   container_name: otel-collector
  #   command: ["--config=/etc/otel-collector-config.yaml"]
  #   volumes:
  #     - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
  #   ports:
  #     - "4317:4317"  # OTLP gRPC port
  #     - "4318:4318"  # OTLP HTTP port
  #   networks:
  #     - opensearch-net
  #   depends_on:
  #     - data-prepper

  # neo4j:
  #   image: neo4j:5.15.0
  #   container_name: neo4j
  #   environment:
  #     - NEO4J_AUTH=neo4j/password
  #     - NEO4J_dbms_memory_pagecache_size=1G
  #     - NEO4J_dbms_memory_heap_initial__size=1G
  #     - NEO4J_dbms_memory_heap_max__size=1G
  #   ports:
  #     - "7474:7474"  # HTTP
  #     - "7687:7687"  # Bolt
  #   volumes:
  #     - neo4j-data:/data
  #     - neo4j-logs:/logs
  #   networks:
  #     - opensearch-net

  # neo4j:
  #   image: neo4j:5.15.0
  #   container_name: neo4j
  #   environment:
  #     - NEO4J_AUTH=neo4j/6Iosis4Qw7eA6Cv_SFCBcxT6zhBDgY-6jM5QrCWFaD8
  #     - NEO4J_dbms_memory_pagecache_size=1G
  #     - NEO4J_dbms_memory_heap_initial__size=1G
  #     - NEO4J_dbms_memory_heap_max__size=1G
  #   ports:
  #     - "7474:7474"  # HTTP
  #     - "7687:7687"  # Bolt
  #   volumes:
  #     - neo4j-data:/data
  #     - neo4j-logs:/logs
  #   networks:
  #     - opensearch-net

  # custom-collector:
  #   build:
  #     context: .
  #     dockerfile: ml-algorithms/src/main/java/org/opensearch/ml/engine/algorithms/agent/telemetry/collector/Dockerfile
  #   container_name: custom-collector
  #   ports:
  #     - "5317:5317"
  #   networks:
  #     - opensearch-net
  #   depends_on:
  #     - neo4j
  #   environment:
  #     - NEO4J_URI=neo4j://neo4j:7687
  #     - NEO4J_USERNAME=neo4j
  #     - NEO4J_PASSWORD=6Iosis4Qw7eA6Cv_SFCBcxT6zhBDgY-6jM5QrCWFaD8

volumes:
  opensearch-data1:
  # opensearch-data2:
  # opensearch-ml1:
  # opensearch-ml2:
  # neo4j-data:
  # neo4j-logs:
 
networks:
  opensearch-net:
    # name: opensearch-net
    # driver: bridge