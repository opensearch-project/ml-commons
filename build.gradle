/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */

buildscript {
    apply from: 'build-tools/repositories.gradle'

    ext {
        opensearch_group = "org.opensearch"
        opensearch_version = System.getProperty("opensearch.version", "1.3.19-SNAPSHOT")
        // 1.3.0 -> 1.3.0.0, and 1.3.0-SNAPSHOT -> 1.3.0.0-SNAPSHOT
        opensearch_build = opensearch_version.replaceAll(/(\.\d+)([^\d]*)$/, '$1.0$2')
        common_utils_version = System.getProperty("common_utils.version", opensearch_build)
    }

    repositories {
        mavenLocal()
        maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "${opensearch_group}.gradle:build-tools:${opensearch_version}"
        classpath "gradle.plugin.com.dorongold.plugins:task-tree:1.5"
    }
}

plugins {
    id 'nebula.ospackage' version "8.3.0"
    id 'java'
    id "io.freefair.lombok" version "5.1.0"
    id 'jacoco'
}

apply plugin: "com.dorongold.task-tree"

ext {
    isSnapshot = "true" == System.getProperty("build.snapshot", "true")
}

allprojects {
    group = 'org.opensearch'
    version = opensearch_version - "-SNAPSHOT" + ".0"
    if (isSnapshot) {
        version += "-SNAPSHOT"
    }

    apply from: "$rootDir/build-tools/repositories.gradle"

    plugins.withId('java') {
        sourceCompatibility = targetCompatibility = "1.8"
    }
}

subprojects {
    configurations {
        testImplementation.extendsFrom compileOnly
    }
}

ext {
    projectSubstitutions = [:]
    licenseFile = rootProject.file('LICENSE.txt')
    noticeFile = rootProject.file('NOTICE.txt')
}

dependencies {
    implementation 'junit:junit:${versions.junit}'
}

// updateVersion: Task to auto increment to the next development iteration
task updateVersion {
    onlyIf { System.getProperty('newVersion') }
    doLast {
        ext.newVersion = System.getProperty('newVersion')
        println "Setting version to ${newVersion}."
        // String tokenization to support -SNAPSHOT
        ant.replaceregexp(match: opensearch_version.tokenize('-')[0], replace: newVersion.tokenize('-')[0], flags:'g', byline:true) {
            fileset(dir: projectDir) {
                // Include the required files that needs to be updated with new Version
                include(name: "build.gradle")
                include(name: ".github/workflows/CI-workflow.yml")
            }
        }
    }
}  
